plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.zooSabana'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'com.h2database:h2:2.2.222'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.required = true
	}

	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				'**/orm/**',
				'**/dto/**',
				'**/DemoApplication*',
				'**/consumidores/**',
				'**/mensajeria/**',
				'**/productores/**',
				'**/config/**',
				'com/zooSabana/demo/controller/ManejadorErrores.class',
				'com/zooSabana/demo/controller/RabbitMQController.class'
		])
	}))
}

tasks.jacocoTestCoverageVerification {
	dependsOn jacocoTestReport
	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
		rule {
			limit {
				counter = 'BRANCH'
				minimum = 0.90
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification
